@page "/library"
@rendermode InteractiveServer
@using Utilities

<PageTitle>Library</PageTitle>

<h2>My Library</h2>

@if (selectedBook != null)
{
    <button class="btn btn-danger remove-btn" @onclick="RemoveBook">Remove Selected Book</button>
}

<div class="books-grid">
    @foreach (var book in BookLibrary.Instance.books)
    {
        <div class="book-card @(book == selectedBook ? "selected" : "")"
             @onclick="@(() => SelectBook(book))"
             title="@($"{book.Title} by {book.Author}")">
            <div class="book-title">@book.Title</div>
            <div class="book-author">@book.Author</div>
        </div>
    }

    <!-- Add book card -->
    <div class="book-card add-book-card" @onclick="() => showAddModal = true" title="Add a new book">
        <div class="add-icon">+</div>
        <div>Add Book</div>
    </div>
</div>

@if (showAddModal)
{
    <div class="modal-backdrop" @onclick="CloseModal"></div>
    <div class="modal">
        <h3>Add New Book</h3>
        <input placeholder="Book Title" @bind="newTitle" />
        <input placeholder="Author" @bind="newAuthor" />
        <div class="modal-buttons">
            <button class="btn btn-primary" @onclick="AddBookAndClose">Add</button>
            <button class="btn btn-secondary" @onclick="CloseModal">Cancel</button>
        </div>
    </div>
}

@code {
    BookData? selectedBook;
    string? newTitle;
    string? newAuthor;

    private bool showAddModal = false;

    public void AddBookAndClose()
    {
        AddBook();
        CloseModal();
    }

    public void CloseModal()
    {
        showAddModal = false;
        newTitle = string.Empty;
        newAuthor = string.Empty;
    }


    public void AddBook()
    {
        if (string.IsNullOrWhiteSpace(newTitle) || string.IsNullOrWhiteSpace(newAuthor))
            return;

        if (BookLibrary.Instance.books.Any(b => b.Title == newTitle && b.Author == newAuthor))
            return;

        var newBook = new BookData { Title = newTitle, Author = newAuthor };
        newBook.GenerateRandomBackgroundColor();
        BookLibrary.Instance.AddBook(newBook);

        newTitle = string.Empty;
        newAuthor = string.Empty;
        selectedBook = null;
    }

    public void RemoveBook()
    {
        if (selectedBook == null) return;
        BookLibrary.Instance.RemoveBook(selectedBook);
        selectedBook = null;
    }

    public void SelectBook(BookData book)
    {
        selectedBook = book;
    }
}
